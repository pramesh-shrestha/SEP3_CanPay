@page "/SendMoney"
@using Domains.Entity
@using HTTPClients.ClientInterfaces
@inject IUserService UserService;
@inject AuthenticationStateProvider StateProvider;

<body>
<div class="container">
    <h3>Send Money</h3>
    <div class="row">
        <div class="col-md-3 first-box">
            
            <div class="icon-image">
                <img src="images/KANPAY logo.png" alt="">
            </div>
            
            <div class="buttonDiv">
                <button class="button">Send</button>
                <button class="button">Cancel</button>
            </div>
        </div>
        
        <!-- 8 Columns -->
        <div class="col-md-6">
            <div class="form-group">
                <div><label>@sender</label></div>
                <label>From</label>

                <div class="inputFields">
                    <select @bind="selectedCardId" class="fieldLength">
                        <option selected value="">Select card</option>
                        @* <option value="@user.Card.CardId">@user.Card.CardNumber</option> *@
                        <option value="">@user.Card.CardNumber</option> 
                    </select>
                </div>
                <label>To</label>
                <div class="inputFields">
                    <input type="text" class="fieldLength" @bind="receiver" @bind:event="oninput" placeholder="Search username...">
                </div>

                <label>Amount</label>
                <div class="inputFields">
                    <input type="text" class="fieldLength" @bind="amount">
                </div>

                <label>Date</label>
                <div class="inputFields">
                    <input type="date" @bind="dateTime" min="@DateTime.Now.Date.ToString("yyyy-MM-dd")" max="@DateTime.Now.Date.ToString("yyyy-MM-dd")">
                </div>

            </div>
        </div>
        <div class="col-md-3 third-box usernameList">
            <h4>List of usernames</h4>
            @* <img src="images/send money.gif" alt="" class="gifImage"> *@
            @foreach (var item in usernames) {
                if (item.ToLower().Contains(receiver.ToLower())) {
                    <ul>
                        <li @onclick="() => receiver = item">@item</li>
                    </ul>
                }
            }
        </div>
        
        
    </div>
</div>
</body>

@code {
    private string? sender = string.Empty;
    private string receiver = string.Empty;
    private int amount;
    private DateTime dateTime = DateTime.Now.Date;
    private int selectedCardId;
    private IEnumerable<UserEntity> userEntities;
    private List<string> usernames;
    private UserEntity user;

    protected override async Task OnInitializedAsync() {
        // AuthenticationState state = await StateProvider.GetAuthenticationStateAsync();
        // sender = state.User.Identity?.Name;
        // userEntities = await UserService.FetchAllUsersAsync();
        userEntities = GetUserEntities();
        sender = userEntities.FirstOrDefault(u => u.UserName.ToLower().Equals("pramesh")).UserName.ToUpper();
        user = userEntities.FirstOrDefault(u => u.UserName.ToLower().Equals("pramesh"));
        usernames = GetUsernames();
    }
    
     public IEnumerable<UserEntity> GetUserEntities() {
        IEnumerable<UserEntity> users = new List<UserEntity>() {
            new UserEntity("Pramesh", "pramesh", "Password1@", new DebitCardEntity(1234567890123456, "12/2030", 123), 1000),
            new UserEntity("Rajip", "rajip", "Password1@", new DebitCardEntity(1234567890654321, "12/2030", 123), 1000),
            new UserEntity("Troels", "troels", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Suhani", "suhani", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Sachin", "sachin", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Himal", "himal", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Rajesh", "rajesh", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Ravi", "ravi", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Rakesh", "rakesh", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Reema", "reema", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Prakash", "prakash", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Shyam", "shyam", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Pratap", "pratap", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Sushma", "sushma", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Bheema", "bheema", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Rajendra", "rajendra", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
            new UserEntity("Ramesh", "ramesh", "Password1@", new DebitCardEntity(4321567890654321, "12/2030", 123), 1000),
         
        };
        return users;
    }

    private List<string> GetUsernames() {
        List<string> users = new List<string>();
        foreach (var user in userEntities) {
            users.Add(user.UserName);
        }
        return users;
    }

}